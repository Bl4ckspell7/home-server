name: cobalt
services:
  cobalt:
    image: ghcr.io/imputnet/cobalt:11
    init: true
    read_only: true
    restart: unless-stopped
    container_name: cobalt
    ports:
      - 9111:9111/tcp
      # if you use a reverse proxy (such as nginx),
      # uncomment the next line and remove the one above (9000:9000/tcp):
      # - 127.0.0.1:9000:9000
    networks:
      default:
      svr1-network:
        ipv4_address: 172.21.255.250
    dns:
      - 172.21.255.254
    environment:
      # replace https://api.url.example/ with your instance's url
      # or else tunneling functionality won't work properly
      API_URL: "http://192.168.178.117/"
      API_PORT: 9111

      # if you want to use cookies for fetching data from services,
      # uncomment the next line & volumes section
      # COOKIE_PATH: "/cookies.json"

      # it's recommended to configure bot protection or api keys if the instance is public,
      # see /docs/protect-an-instance.md for more info

      # see /docs/run-an-instance.md for more variables that you can use here
    labels:
      - com.centurylinklabs.watchtower.scope=cobalt

    # uncomment only if you use the COOKIE_PATH variable
    # volumes:
    # - ./cookies.json:/cookies.json

  # watchtower updates the cobalt image automatically
  watchtower:
    image: ghcr.io/containrrr/watchtower
    restart: unless-stopped
    command: --cleanup --scope cobalt --interval 900 --include-restarting
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # if needed, use this image for automatically generating poToken & visitor_data
  # yt-session-generator:
  #     image: ghcr.io/imputnet/yt-session-generator:webserver

  #     init: true
  #     restart: unless-stopped
  #     container_name: yt-session-generator
  #     labels:
  #       - com.centurylinklabs.watchtower.scope=cobalt

networks:
  default:
    driver: bridge
  svr1-network:
    external: true
